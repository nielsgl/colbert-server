name: Publish

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      repository:
        description: "Publish target"
        required: true
        default: "pypi"
        type: choice
        options:
          - pypi
          - testpypi

jobs:
  determine-target:
    runs-on: ubuntu-latest
    outputs:
      repository: ${{ steps.set-target.outputs.repository }}
      environment: ${{ steps.set-target.outputs.environment }}
    steps:
      - id: set-target
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "repository=${{ github.event.inputs.repository }}" >> "$GITHUB_OUTPUT"
            echo "environment=${{ github.event.inputs.repository }}" >> "$GITHUB_OUTPUT"
          else
            echo "repository=pypi" >> "$GITHUB_OUTPUT"
            echo "environment=pypi" >> "$GITHUB_OUTPUT"
          fi

  build:
    runs-on: ubuntu-latest
    needs: determine-target
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install uv and Python
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.9.5"
          python-version: "3.13"

      - name: Build distributions
        run: uv build --no-sources

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish:
    runs-on: ubuntu-latest
    needs: [determine-target, build]
    environment: ${{ needs.determine-target.outputs.environment }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
          merge-multiple: true

      - name: Show downloaded files
        run: ls -R

      - name: Publish to TestPyPI
        if: needs.determine-target.outputs.repository == 'testpypi'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          packages-dir: dist
          verify-metadata: true
          verbose: true

      - name: Publish to PyPI
        if: needs.determine-target.outputs.repository == 'pypi'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
          verify-metadata: true
          verbose: true
